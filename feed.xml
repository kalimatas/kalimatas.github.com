<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://guzalexander.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://guzalexander.com/" rel="alternate" type="text/html" /><updated>2021-08-19T22:05:27+02:00</updated><id>https://guzalexander.com/feed.xml</id><title type="html">Alexander Guz’s blog</title><author><name>Alexander Guz</name></author><entry><title type="html">RemNote — Great Note-Taking App Nobody is Talking About</title><link href="https://guzalexander.com/2020/09/11/notes-apps-fatigue.html" rel="alternate" type="text/html" title="RemNote — Great Note-Taking App Nobody is Talking About" /><published>2020-09-11T21:30:00+02:00</published><updated>2020-09-11T21:30:00+02:00</updated><id>https://guzalexander.com/2020/09/11/notes-apps-fatigue</id><content type="html" xml:base="https://guzalexander.com/2020/09/11/notes-apps-fatigue.html">&lt;p&gt;I have been using Evernote for quite some years now as my go-to application for 
notes, bookmarks, sketches, etc. Indeed, it is not a bad choice: clients for all platforms
you can imagine, synchronization between devices, good enough editor with formatting,
typical hierarchical notes organization into notebooks and sub-notebooks, tags, sharing
options, etc. I even had a paid version in order to have synchronization on more than two
devices. And still, I have never felt that I have been using all its potential.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/notes_evernote.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/notes_evernote.png&quot; alt=&quot;Evernote for macOS&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Evernote for macOS&lt;/figcaption&gt;

&lt;p&gt;Eventually, I realized that my notes were lying “dead“ there. Like a pile of useless crap.
Basically, once something got into Evernote, I just forgot about it. And, probably, never
open this note again, except for some edge cases. These notes were not helping me.&lt;/p&gt;

&lt;p&gt;Then I stumbled upon &lt;a href=&quot;https://roamresearch.com/&quot;&gt;Roam Research&lt;/a&gt; – the app on hype now. It had invitation system,
so I could only check out the &lt;a href=&quot;https://roamresearch.com/#/app/help/page/k5RxbGuJN&quot;&gt;demo page&lt;/a&gt;.
But it was not the tool itself that made me switch from Evernote. By watching tutorials,
and reading articles about Roam I grasped the idea of a second brain, a personal
knowledge base. This is where it all clicked – my Evernote notes are junk, because they
are not connected to each other. Yes, I have a notebook “Programming“, but notes inside this 
notebook are just separate pieces with no relation to each other whatsoever. These 
relations exist only in my head. And my head has only so much free space to hold all 
this stuff.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/notes_roam.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/notes_roam.png&quot; alt=&quot;Roam Research&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Roam Research&lt;/figcaption&gt;

&lt;p&gt;The essential part that is missing in Evernote in comparison to, let’s say the same Roam
Research, is linking of the notes. One can argue, that Evernote has notes links. But 
functionality- and comfort-wise they are a joke. Imagine, you are writing a note about 
new sorting algorithm, and now you want to link some phrase to the big-O notation note. 
You have to: 
	1. Find big-O note (potentially in another notebook).
	2. Then right click and find an option to copy the note link.
	3. Then go back to the place where you want to place the link and
	4. Finally, paste it.
I almost died from boredom by just explaining this procedure. By the time you finish it,
you have already lost any thought train you had.&lt;/p&gt;

&lt;p&gt;Just to have a link inside a note to another note is not enough, though. Another powerful
concept is back linking. Imagine, you are looking at a note, and you can immediately see 
if any other note refers to it. You might have linked it from another place without putting
too much thought, but in the end you created a new association that can create a new idea.
Pretty cool. Some apps go further and even provide so called “non-referenced“ links, i.e.
they show other notes that reference just the title of the current note as a text.&lt;/p&gt;

&lt;p&gt;I was hooked and decided to switch. But first, I needed to find &lt;strong&gt;the perfect&lt;/strong&gt; application,
of course. Roam Research is too expensive. I mean, I am glad to spend $15/month for an 
app, if I know that this is a game changer. But not from the day one. So I started my
research. Oh boy, just look at &lt;strong&gt;&lt;a href=&quot;https://www.notion.so/db13644f08144495ad9877f217a161a1?v=ff6777802811416ba08dc114e0b11837&quot;&gt;this huge list&lt;/a&gt;&lt;/strong&gt; of 85 note-taking applications! I think I have 
looked almost through all of them, and fooled around with at least 15 or so.&lt;/p&gt;

&lt;p&gt;The most worthy of mention are &lt;a href=&quot;https://obsidian.md/&quot;&gt;Obsidian&lt;/a&gt;, &lt;a href=&quot;https://foambubble.github.io/foam/&quot;&gt;Foam&lt;/a&gt;, &lt;a href=&quot;https://www.notion.so&quot;&gt;Notion&lt;/a&gt;, and
my favorite so far – &lt;strong&gt;&lt;a href=&quot;https://www.remnote.io&quot;&gt;RemNote&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/notes_obsidian.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/notes_obsidian.png&quot; alt=&quot;Obsidian. Stores notes in Markdown locally.&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Obsidian. Stores notes in Markdown locally.&lt;/figcaption&gt;

&lt;p&gt;RemNote is great. It is free. It is packed with features. It is ugly. Well, to be 
fair it was ugly until the recent upgrade a few days ago. Now it is a bit better. But I
like the spirit. Started to use it on a daily basis. Cancelled my Evernote subscription. 
It is a long way for RemNote to become great, though. What they currently lack is media
promotion. This is a great application nobody is talking about! Everybody talks 
only about Roam Research.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/notes_remnote.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/notes_remnote.png&quot; alt=&quot;RemNote tutorial page&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;RemNote tutorial page&lt;/figcaption&gt;

&lt;p&gt;So did I just find a perfect tool for me? I am not sure, to be honest. RemNote has a bunch 
of downsides. For example, lack of a desktop application that is huge minus for me, since
I hate doing serious work in a browser window. I also have some concerns about the future
of the app: there is no business behind, and I cannot tell for sure how serious the authors
are about continuing working on it. I definitely don’t want to lose all my notes in two years or so.&lt;/p&gt;

&lt;p&gt;And let’s not forget, that there are other players on the market. There are so many options!
Having so much variety might seem like a good thing in the first place, but it leads to
&lt;a href=&quot;https://en.wikipedia.org/wiki/Decision_fatigue&quot;&gt;decision fatigue&lt;/a&gt;. I really just want
to have the work done, to have my brain organized and get the most out of my notes. I 
don’t want to spend endless hours on choosing &lt;strong&gt;the&lt;/strong&gt; right tool.&lt;/p&gt;

&lt;p&gt;Maybe I should just switch to &lt;a href=&quot;https://www.williamhern.com/living-in-a-single-text-file.html&quot;&gt;one&lt;/a&gt;
&lt;a href=&quot;https://jeffhuang.com/productivity_text_file/&quot;&gt;text file&lt;/a&gt; or &lt;a href=&quot;https://orgmode.org/&quot;&gt;Org mode&lt;/a&gt;?&lt;/p&gt;</content><author><name>Alexander Guz</name></author><summary type="html">I have been using Evernote for quite some years now as my go-to application for notes, bookmarks, sketches, etc. Indeed, it is not a bad choice: clients for all platforms you can imagine, synchronization between devices, good enough editor with formatting, typical hierarchical notes organization into notebooks and sub-notebooks, tags, sharing options, etc. I even had a paid version in order to have synchronization on more than two devices. And still, I have never felt that I have been using all its potential.</summary></entry><entry><title type="html">Pastel Interfaces</title><link href="https://guzalexander.com/2020/09/04/pastel.html" rel="alternate" type="text/html" title="Pastel Interfaces" /><published>2020-09-04T20:30:00+02:00</published><updated>2020-09-04T20:30:00+02:00</updated><id>https://guzalexander.com/2020/09/04/pastel</id><content type="html" xml:base="https://guzalexander.com/2020/09/04/pastel.html">&lt;p&gt;I prefer light color themes in application interfaces. Never understood this craze about
dark interfaces. As I spend a lot of time in a code editor, I believe light colors are 
easier for my eyes. But, not the point.&lt;/p&gt;

&lt;p&gt;Recently I noticed that in some applications – Firefox, IntelliJ IDEA, for example, – I
switched to new color themes that looks similar to each other. Here is 
&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/calm-pastel-4/&quot;&gt;the Calm Pastel 4&lt;/a&gt; theme for Firefox:&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/pastel_firefox.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/pastel_firefox.png&quot; alt=&quot;Calm Pastel 4&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Calm Pastel 4&lt;/figcaption&gt;

&lt;p&gt;And here is the &lt;a href=&quot;https://plugins.jetbrains.com/plugin/12257-pastel-licious&quot;&gt;Pastel-licious&lt;/a&gt; for IntelliJ IDEA (I love this theme!):&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;a href=&quot;/static/img/posts/pastel_intellij_idea.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/static/img/posts/pastel_intellij_idea.png&quot; alt=&quot;Pastel-licious&quot; /&gt;&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Pastel-licious&lt;/figcaption&gt;

&lt;p&gt;Both of these themes are in one color palette – pastel. But what does this word even mean?!
I have heard multiple times things like “to draw with pastel“, or this picture is in 
pastel tones, etc. But I had only vague idea about what that meant. So I decided to dig
a bit.&lt;/p&gt;

&lt;p&gt;So the word “pastel“ comes from Italian “pastello“, that comes from Italian “pasta“. Nice,
I love Bolognese. Hm, wait, it’s not about food here… Anyway, pastel is both a name for
an art medium in the form of a stick and a drawing technique. It is used during the 
preparation phase for paintings, but some artists use it as a standalone art form. It is
only possible with the usage of special fixative, since pastel material is very easy
to destroy. One of the most prominent pastels is &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Chocolate_Girl&quot;&gt;The Chocolate Girl&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/pastel-the-chocolate-girl.jpg&quot; alt=&quot;By Jean-Étienne Liotard&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;By Jean-Étienne Liotard&lt;/figcaption&gt;

&lt;p&gt;But I digress. I will not go really deep into that. You better just read it in 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Pastel&quot;&gt;Wikipedia&lt;/a&gt;. What drives my attention to these type
of themes is &lt;a href=&quot;https://en.wikipedia.org/wiki/Pastel_(color)&quot;&gt;pastel colors&lt;/a&gt;. This is a
palette of muted pale shades with high value and low saturation.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/pastel_palette.png&quot; alt=&quot;Example of pastel palette&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Example of pastel palette&lt;/figcaption&gt;

&lt;p&gt;All these colors have one common characteristic: they are soft to the eye, calm, warm.
They do not irritate our eyes and do not distract, letting your eyes relax. Seems like
I am choosing these type of color theme subconsciously – it is just easy and pleasant 
to look at such interfaces for a long time.&lt;/p&gt;</content><author><name>Alexander Guz</name></author><summary type="html">I prefer light color themes in application interfaces. Never understood this craze about dark interfaces. As I spend a lot of time in a code editor, I believe light colors are easier for my eyes. But, not the point.</summary></entry><entry><title type="html">GPS Art</title><link href="https://guzalexander.com/2020/08/30/gps-art.html" rel="alternate" type="text/html" title="GPS Art" /><published>2020-08-30T21:30:00+02:00</published><updated>2020-08-30T21:30:00+02:00</updated><id>https://guzalexander.com/2020/08/30/gps-art</id><content type="html" xml:base="https://guzalexander.com/2020/08/30/gps-art.html">&lt;p&gt;I bet everybody knows this feeling when you get an interesting idea in your head, and 
you think – that is it! I need to do it! You start to dig into, but the first Google 
request shows that somebody has already implemented it. Bummer. I had one of those ideas
the other day.&lt;/p&gt;

&lt;p&gt;Since around a year or a bit more, I am into running. For tracking my running time and 
routes I am using an application, of course. It is nice to look at some statistics. After
one of the runs, I looked at the route, and it reminded me of some figure or a drawing.
And then a thought came to me – what if we draw something  on a map while running using a 
GPS tracker?! Just imagine: a whole community running and sharing their routes!&lt;/p&gt;

&lt;p&gt;My first deliberate attempt to draw during running was a letter “M“. It is supposed to be 
the first letter in either my wife’s name, or in the word “Metallica“. I’m not sure yet.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/gpsart_mletter.png&quot; alt=&quot;&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;As it turned out, I am not the only one to come up with this idea. Drawing on a map with 
a GPS tracker is called &lt;a href=&quot;https://en.wikipedia.org/wiki/GPS_drawing&quot;&gt;GPS Art&lt;/a&gt;. It originated in 90s, and, of course, became more 
popular with a spread of mobile GPS devices. Check out hashtag &lt;a href=&quot;https://twitter.com/search?q=%23gpsart&amp;amp;src=typed_query&quot;&gt;#gpsart&lt;/a&gt;
on Twitter for inspiration.&lt;/p&gt;

&lt;p&gt;The community also has its heroes. For example, the largest drawings on Earth belong to
Japanese artist Yasushi Takahashi. Here is a word “peace“… &lt;a href=&quot;https://www.google.com/maps/d/viewer?hl=ja&amp;amp;mid=1nDdvPvZtyeh0a6uOxGTu7rEzRqI&amp;amp;ll=-3.81666561775622e-14%2C26.488384499999995&amp;amp;z=2&quot;&gt;60,794 km long&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/gpsart_peace.png&quot; alt=&quot;&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;And here is “Marry Me“ &lt;a href=&quot;https://www.google.com/maps/d/viewer?hl=ja&amp;amp;mid=1m8Sevf2iWZT83ax5x2q6n8P8tBY&amp;amp;ll=38.29853440547071%2C137.199813859375&amp;amp;z=6&quot;&gt;over the whole Japan&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/gpsart_marryme.jpg&quot; alt=&quot;&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;You can check out more of his work at &lt;a href=&quot;http://gpsdrawing.info/&quot;&gt;http://gpsdrawing.info/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But anyway, a journey of a thousand miles begins with a single step. So I guess I just go 
put my running shoes on and take a bunch of those single steps for now.&lt;/p&gt;</content><author><name>Alexander Guz</name></author><summary type="html">I bet everybody knows this feeling when you get an interesting idea in your head, and you think – that is it! I need to do it! You start to dig into, but the first Google request shows that somebody has already implemented it. Bummer. I had one of those ideas the other day.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://guzalexander.com/static/img/posts/gpsart_marryme.jpg" /><media:content medium="image" url="https://guzalexander.com/static/img/posts/gpsart_marryme.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">On Being a Backbone Software Developer</title><link href="https://guzalexander.com/2020/08/26/ace-pilots.html" rel="alternate" type="text/html" title="On Being a Backbone Software Developer" /><published>2020-08-26T21:00:00+02:00</published><updated>2020-08-26T21:00:00+02:00</updated><id>https://guzalexander.com/2020/08/26/ace-pilots</id><content type="html" xml:base="https://guzalexander.com/2020/08/26/ace-pilots.html">&lt;p&gt;Pilots performing aerobatics maneuvers at air shows are exceptional professionals with 
incredible skills. I witnessed with my own eyes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cobra_maneuver&quot;&gt;Cobra maneuver&lt;/a&gt; at one of the 
performances in Moscow. It is indeed an incredible sight. Piloting at its best.&lt;/p&gt;

&lt;p&gt;At the same time, a thought came to me: How often do pilots use these aerobatics maneuvers
in real conditions? I doubt these skills are required during another planned flight.
And my next thought was: Despite the skills, these pilots are not the backbone of a 
regular army. Regular pilots — work horses — serve as a basis for any unit. They do the job 
without frills. Perhaps, they are not that good at air shows, but it doesn’t make them less 
important.&lt;/p&gt;

&lt;p&gt;We observe the same situation in software development. Ace pilots are programmers who 
solve whiteboard puzzles. But are they a good fit for a regular job? Anyone who was hiring 
at and conducting interviews knows that these whiteboard skills do not automatically mean
good performance when working on a project in a team.&lt;/p&gt;

&lt;p&gt;As it is with pilots, the backbone of any team or organization bases on ordinary 
programmers. They are not rockstar developers. They might not invert a binary tree in 
their head. But they solve specific tasks by googling and coping from StackOverflow.&lt;/p&gt;

&lt;p&gt;Backbone developers deliver.&lt;/p&gt;

&lt;p&gt;Being the backbone is not a shame. It is honorable.&lt;/p&gt;</content><author><name>Alexander Guz</name></author><summary type="html">Pilots performing aerobatics maneuvers at air shows are exceptional professionals with incredible skills. I witnessed with my own eyes the Cobra maneuver at one of the performances in Moscow. It is indeed an incredible sight. Piloting at its best.</summary></entry><entry><title type="html">Welcome to March 32nd</title><link href="https://guzalexander.com/2020/05/03/oversize-date-mechanism.html" rel="alternate" type="text/html" title="Welcome to March 32nd" /><published>2020-05-03T14:00:00+02:00</published><updated>2020-05-03T14:00:00+02:00</updated><id>https://guzalexander.com/2020/05/03/oversize-date-mechanism</id><content type="html" xml:base="https://guzalexander.com/2020/05/03/oversize-date-mechanism.html">&lt;p&gt;My wife and I both have watches with the date window - the one that shows the day of the month. At the end of March,
nearly midnight, my watch’s date window switched to number “1”, which stands for April 1st. Though my wife’s watch
started to show number “32” instead. I was curious why, and found out that it is because of so called outsize date
mechanism.&lt;/p&gt;

&lt;p&gt;The standard date mechanism is made of a single ring with numbers from 1 to 31 printed on it. The ring gradually rotates,
and eventually switches to another number. My watch has this mechanism. The “problem” is that this way the window size,
and thus the size of a number inside, is small, because the ring has to fit into the frame.&lt;/p&gt;

&lt;p&gt;The feature that allows to have a larger “font size” in date windows goes under the name “the oversize 
date complication” &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.
This feature utilizes two pieces for displaying the date: units disc and tens cross, which are nicely synchronized.
Tens cross has numbers from 0 to 3, and unit disc - from 0 to 9. The final day of the month is then a combination of two
digits from both pieces.&lt;/p&gt;

&lt;p&gt;This video has a nice visual explanation of the outsize date mechanism.&lt;/p&gt;

&lt;iframe class=&quot;video-player&quot; height=&quot;340&quot; src=&quot;https://www.youtube-nocookie.com/embed/YouzFPSD77o&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;So why does my wife’s watch show 32? Well, it actually goes up to 39! It seems that in some “cheap” implementations of
the oversize date mechanism, the tens cross and the unit disc do not have proper synchronization. After the tens cross
switched from 3 to 0, indicating the beginning of a new month, the unit disc just continues to rotate further to 2, 3, 4, etc.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The term “complication” means any other function on a watch other than the display of time. Read more about &lt;a href=&quot;https://www.tourneau.com/watch-education/watch-complications.html&quot;&gt;watch complications&lt;/a&gt;. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alexander Guz</name></author><summary type="html">My wife and I both have watches with the date window - the one that shows the day of the month. At the end of March, nearly midnight, my watch’s date window switched to number “1”, which stands for April 1st. Though my wife’s watch started to show number “32” instead. I was curious why, and found out that it is because of so called outsize date mechanism.</summary></entry><entry><title type="html">Covariance and Contravariance in Programming</title><link href="https://guzalexander.com/2020/02/04/variance-in-type-systems.html" rel="alternate" type="text/html" title="Covariance and Contravariance in Programming" /><published>2020-02-04T09:00:00+01:00</published><updated>2020-02-04T09:00:00+01:00</updated><id>https://guzalexander.com/2020/02/04/variance-in-type-systems</id><content type="html" xml:base="https://guzalexander.com/2020/02/04/variance-in-type-systems.html">&lt;p&gt;Whenever I hear “covariant return type”, I have to pause and engage my 
System 2 &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; thoroughly in order to understand what I have just heard. 
And even then, I cannot bet I will answer properly what it means. So this serves
 as a memo for me of the concept of variance &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; in programming.&lt;/p&gt;

&lt;p&gt;The notion of variance is related to the topic of subtyping &lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; in 
programming language theory. It deals with rules of what is allowed or not with 
regards to function arguments and return types.&lt;/p&gt;

&lt;p&gt;Variance comes in four forms:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;invariance&lt;/li&gt;
  &lt;li&gt;covariance&lt;/li&gt;
  &lt;li&gt;contravariance&lt;/li&gt;
  &lt;li&gt;bivariance (will skip that)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before we dive into explanations, let us agree on pseudo code that I am going 
to use. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; operator shows subtyping. In the example&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Vehicle &amp;gt; Bus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt; is a subtype of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vehicle&lt;/code&gt;. Functions are defined with the following syntax:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func foo(T): R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;T&lt;/code&gt; is a type of an argument, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;R&lt;/code&gt; is a return type of a function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt;.
Functions can also override another functions (think “override of a method 
in Java”). Here, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bar&lt;/code&gt; overrides &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foo&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func foo(T): R &amp;gt; func bar(T): R
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Throughout the example, I will be using this hierarchy of objects.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Vehicle &amp;gt; MotorVehicle &amp;gt; Bus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;invariance&quot;&gt;Invariance&lt;/h2&gt;

&lt;p&gt;Invariance is the easiest to understand: it does not allow anything - neither 
supertype nor subtype - to be used instead of a defined function argument or 
return type in inherited functions. For instance, if we have a function:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func drive(MotorVehicle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then the only possible way to define an inherited function is with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt; 
argument, but not &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vehicle&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func drive(MotorVehicle) &amp;gt; func overrideDrive(MotorVehicle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Same goes for return types.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func produce(): MotorVehicle &amp;gt; func overrideProduce(): MotorVehicle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way, the type system of a language doesn’t allow you much flexibility,
but protects you from many possible type errors.&lt;/p&gt;

&lt;h2 id=&quot;covariance&quot;&gt;Covariance&lt;/h2&gt;

&lt;p&gt;Covariance allows subtypes or, in other words, more specific types to be used 
instead of a defined function argument or return type. Let’s start with return 
types. &lt;strong&gt;Return types are covariant&lt;/strong&gt;. Let’s look at these two functions:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func produce(): MotorVehicle &amp;gt; fn overrideProduce(): Bus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is it OK that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideProduce&lt;/code&gt; returns more concrete &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt; instead of 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt;? Yes, it is! Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt; is a type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt;, it meets 
the contract, because it supports everything a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt; can do. So this 
is allowed:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;motorVehicle = product()
motorVehicle = overrideProduce()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this case, for the calling code there is no difference whether &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;motorVehicle&lt;/code&gt;
variable has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt; instance or a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But what about function arguments? Is this definition fine?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func drive(MotorVehicle) &amp;gt; func overrideDrive(Bus)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is actually not allowed by a safe type system, because &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideDrive&lt;/code&gt; 
breaks parent’s contract. Users of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drive&lt;/code&gt; expect to be able to pass any type 
of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt;, not only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt;. Indeed, imagine someone calls &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drive&lt;/code&gt; with, 
let’s say a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Car&lt;/code&gt; (where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle &amp;gt; Car&lt;/code&gt;), then the call to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideDrive&lt;/code&gt;
will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideDrive(Car)&lt;/code&gt;, but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideDrive&lt;/code&gt; works only with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bus&lt;/code&gt; instances.
So function arguments are not covariant. And here we approach contravariance.&lt;/p&gt;

&lt;h2 id=&quot;contravariance&quot;&gt;Contravariance&lt;/h2&gt;

&lt;p&gt;Contravariance allows supertypes or, in other words, more abstract types to be 
used instead of a defined type. &lt;strong&gt;Function arguments are contravariant&lt;/strong&gt;. 
Let’s have a look at the example.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func drive(MotorVehicle) &amp;gt; func overrideDrive(Vehicle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Though it looks counterintuitive, this is a perfectly valid case. 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;overrideDrive&lt;/code&gt; meets parent’s contract: it supports any &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vehicle&lt;/code&gt;, and since 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt; is a type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vehicle&lt;/code&gt;, users of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drive&lt;/code&gt; still can pass any 
instance of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MotorVehicle&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Thinking,_Fast_and_Slow#Two_systems&quot;&gt;The concept of System 2 is from the book “Thinking, Fast and Slow”&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)&quot;&gt;Covariance and contravariance&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Subtyping&quot;&gt;Subtyping&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alexander Guz</name></author><summary type="html">Whenever I hear “covariant return type”, I have to pause and engage my System 2 1 thoroughly in order to understand what I have just heard. And even then, I cannot bet I will answer properly what it means. So this serves as a memo for me of the concept of variance 2 in programming. The concept of System 2 is from the book “Thinking, Fast and Slow” &amp;#8617; Covariance and contravariance &amp;#8617;</summary></entry><entry><title type="html">Books I Read in 2019</title><link href="https://guzalexander.com/2020/01/10/books-read-2019.html" rel="alternate" type="text/html" title="Books I Read in 2019" /><published>2020-01-10T21:40:00+01:00</published><updated>2020-01-10T21:40:00+01:00</updated><id>https://guzalexander.com/2020/01/10/books-read-2019</id><content type="html" xml:base="https://guzalexander.com/2020/01/10/books-read-2019.html">&lt;p&gt;2019 is the first year I decided to track books I have read on &lt;a href=&quot;https://www.goodreads.com/user/show/106745400-alexander&quot;&gt;Goodreads&lt;/a&gt;. Here is the list. Though, it might be not complete, because I got this idea only in December and struggled to recall all the books.&lt;/p&gt;

&lt;p&gt;Quite clear that fiction prevails. Definitely will spend more time reading more useful books this year.&lt;/p&gt;

&lt;h2 id=&quot;fiction-12&quot;&gt;Fiction (12)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/20518872-the-three-body-problem?from_search=true&amp;amp;qid=BxeN1oZGoN&amp;amp;rank=1&quot;&gt;The Three-Body Problem&lt;/a&gt; by Liu Cixin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/23168817-the-dark-forest&quot;&gt;The Dark Forest&lt;/a&gt; by Liu Cixin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/25451264-death-s-end&quot;&gt;Death’s End&lt;/a&gt; by Liu Cixin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/19161852-the-fifth-season&quot;&gt;The Fifth Season&lt;/a&gt; by N.K. Jemisin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/26228034-the-obelisk-gate&quot;&gt;The Obelisk Gate&lt;/a&gt; by N.K. Jemisin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/31817749-the-stone-sky&quot;&gt;The Stone Sky&lt;/a&gt; by N.K. Jemisin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/17182126-steelheart?ac=1&amp;amp;from_search=true&amp;amp;qid=H7mG4q2El6&amp;amp;rank=1&quot;&gt;Steelheart&lt;/a&gt; by Brandon Sanderson&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/15704459-firefight&quot;&gt;Firefight&lt;/a&gt; by Brandon Sanderson&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/15704486-calamity&quot;&gt;Calamity&lt;/a&gt; by Brandon Sanderson&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/333867.The_Stars_My_Destination?from_search=true&amp;amp;qid=HnWcH3OYcP&amp;amp;rank=1&quot;&gt;The Stars My Destination (Tiger! Tiger!)&lt;/a&gt; by Alfred Bester&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/34703445-edgedancer?from_search=true&amp;amp;qid=C0VXtDiG2V&amp;amp;rank=1&quot;&gt;Edgedancer&lt;/a&gt; by Brandon Sanderson&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/34002132-oathbringer&quot;&gt;Oathbringer&lt;/a&gt; by Brandon Sanderson&lt;/p&gt;

&lt;h2 id=&quot;non-fiction-5&quot;&gt;Non-fiction (5)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/1069827.Release_It_?from_search=true&amp;amp;qid=lTJCUq8zik&amp;amp;rank=1~&quot;&gt;Release It!: Design and Deploy Production-Ready Software&lt;/a&gt; by Michael T. Nygard&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/33369254-the-manager-s-path?ac=1&amp;amp;from_search=true&amp;amp;qid=J6eTeMNatA&amp;amp;rank=1&quot;&gt;The Manager’s Path: A Guide for Tech Leaders Navigating Growth and Change&lt;/a&gt; by Camille Fournier&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/32853566-a-brief-history-of-time&quot;&gt;A Brief History of Time: From the Big Bang to Black Holes&lt;/a&gt; by Stephen Hawking&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/7155145-linchpin?ac=1&amp;amp;from_search=true&amp;amp;qid=pCQag4hXGg&amp;amp;rank=2&quot;&gt;Linchpin: Are You Indispensable?&lt;/a&gt; by Seth Godin&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.goodreads.com/book/show/25091671-software-architecture-patterns?ac=1&amp;amp;from_search=true&amp;amp;qid=lit3pk38L9&amp;amp;rank=1&quot;&gt;Software Architecture Patterns&lt;/a&gt; by Mark Richards&lt;/p&gt;</content><author><name>Alexander Guz</name></author><summary type="html">2019 is the first year I decided to track books I have read on Goodreads. Here is the list. Though, it might be not complete, because I got this idea only in December and struggled to recall all the books.</summary></entry><entry><title type="html">The Origin of the Word “maintenance”</title><link href="https://guzalexander.com/2019/10/21/maintenance-ahhhh.html" rel="alternate" type="text/html" title="The Origin of the Word “maintenance”" /><published>2019-10-21T21:13:00+02:00</published><updated>2019-10-21T21:13:00+02:00</updated><id>https://guzalexander.com/2019/10/21/maintenance-ahhhh</id><content type="html" xml:base="https://guzalexander.com/2019/10/21/maintenance-ahhhh.html">&lt;p&gt;Oh boy, here I go mistyping the word “maintenance” again! For some reason, this is the most complicated English word for me in terms of spelling. It comes out as “maintanence”, or “maintenence”, or some other variant, but almost never the correct one. Even seemingly complicated to write words like “daughter” are no-brainer for me. But whenever I am done typing “maint”, I already know I am doomed for failure.&lt;/p&gt;

&lt;p&gt;So I decided to look up who came up with this word and when. Just, you know, to thank this person for all the pain and suffering I have endured. Though, something tells me, that would be pretty hard without a time machine. And indeed, the origins of the word “maintenance” go as far as to the 12th century.&lt;/p&gt;

&lt;p class=&quot;center center&quot;&gt;mid-14c., maintenaunce &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;⬇︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;from Old French maintenance “upkeep; shelter, protection”&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;⬇︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;from maintenir “to keep, sustain; persevere in”&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;⬇︎︎︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;c. 1300, maintenen, “to support, uphold, aid;” &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;⬇︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;from Anglo-French meintenir (Old French maintenir, 12c.) “persevere in, practice continually”&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;⬇︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;from Latin manu tenere “hold in the hand,”︎︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;︎︎︎︎︎︎︎︎︎⬇︎&lt;/p&gt;
&lt;p class=&quot;center&quot;&gt;from manu, ablative of manus “hand” + tenere “to hold”&lt;/p&gt;

&lt;p&gt;Now I know. I hope it helps me to finally remember how to spell it.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.etymonline.com/word/maintenance&quot;&gt;maintenance (n.)&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.etymonline.com/word/maintain&quot;&gt;maintain (v.)&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alexander Guz</name></author><summary type="html">Oh boy, here I go mistyping the word “maintenance” again! For some reason, this is the most complicated English word for me in terms of spelling. It comes out as “maintanence”, or “maintenence”, or some other variant, but almost never the correct one. Even seemingly complicated to write words like “daughter” are no-brainer for me. But whenever I am done typing “maint”, I already know I am doomed for failure.</summary></entry><entry><title type="html">Java Geospatial In-memory Index</title><link href="https://guzalexander.com/2018/11/04/java-in-memory-geospatial.html" rel="alternate" type="text/html" title="Java Geospatial In-memory Index" /><published>2018-11-04T19:12:00+01:00</published><updated>2018-11-04T19:12:00+01:00</updated><id>https://guzalexander.com/2018/11/04/java-in-memory-geospatial</id><content type="html" xml:base="https://guzalexander.com/2018/11/04/java-in-memory-geospatial.html">&lt;p&gt;One of my recent tasks included searching for objects within some radius based on their geo coordinates. 
For various reasons — not relevant to this topic — I wanted to make this work completely in 
memory. 
That’s why solutions like &lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/spatial-types.html&quot;&gt;MySQL Spatial Data Types&lt;/a&gt;, &lt;a href=&quot;https://postgis.net/&quot;&gt;PostGIS&lt;/a&gt; or &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-queries.html&quot;&gt;Elasticsearch Geo Queries&lt;/a&gt; were not considered. The project is in Java. I started to look for possible options, and, though, I found a few, they all lacked an easy to follow documentation (if at all) and examples.&lt;/p&gt;

&lt;p&gt;So I decided to make a short description of some Java in-memory geospatial indices I’ve discovered during my research with code examples and benchmarks done with &lt;a href=&quot;http://openjdk.java.net/projects/code-tools/jmh/&quot;&gt;jmh&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Again, the task at hand: given a geo point, find the nearest to it object within a given radius using in-memory data structures. As an extra requirement, we would like to have arbitrary data attached to the objects stored in this data structures. The reason is that, in most cases, these objects are not merely geo points, they are rather some domain entities, and we would build our business logic based on them. In our case, the arbitrary data will be just an integer ID, and we pretend we can later fetch required entity from some repository by this ID.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/geo_circle.jpg&quot; alt=&quot;Figure 1. We need to find all green points within the radius of D km from the source point S.&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Figure 1. We need to find all green points within the radius of D km from the source point S.&lt;/figcaption&gt;

&lt;h2 id=&quot;lucene-spatial-extras&quot;&gt;Lucene spatial extras&lt;/h2&gt;

&lt;p&gt;I learned about Lucene while using Elasticsearch, because it’s based on it &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I thought: well, 
Elasticsearch has Geo queries made with Lucene, which means Lucene has support for it, which, maybe, also has support for in-memory geospatial index. And I was right. Lucene project has &lt;a href=&quot;https://lucene.apache.org/core/7_4_0/spatial-extras/index.html&quot;&gt;Spatial-Extras module&lt;/a&gt;, that &lt;em&gt;encapsulates an approach to indexing and searching based on shapes&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Using this module turned out to be a non-trivial task. Except JavaDocs and source code, I could only find an example of its usage in &lt;a href=&quot;https://github.com/apache/lucene-solr/blob/master/lucene/spatial-extras/src/test/org/apache/lucene/spatial/SpatialExample.java&quot;&gt;Apache Solr + Lucene repository&lt;/a&gt;, and made my implementation based on it. Lucene provides generalised approach to indexing and searching different types of data, and geospatial index is just one of the flavours.&lt;/p&gt;

&lt;p&gt;Let’s have a look at the example.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpatialContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spatialCxt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpatialContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GEO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShapeFactory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spatialCxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getShapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpatialStrategy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coordinatesStrategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RecursivePrefixTreeStrategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GeohashPrefixTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spatialCxt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;coordinates&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Create an index&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Directory&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RAMDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;IndexWriterConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iwConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IndexWriterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;IndexWriter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexWriter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IndexWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iwConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Index some documents&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;nc&quot;&gt;Document&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StoredField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pointXY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coordinatesStrategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;createIndexableFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StoredField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coordinatesStrategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFieldName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;:&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;indexWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indexWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forceMerge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indexWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Query the index&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IndexReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexReader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DirectoryReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;IndexSearcher&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexSearcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IndexSearcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;indexReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NEARBY_RADIUS_DEGREE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DistanceUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dist2Degrees&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DistanceUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EARTH_MEAN_RADIUS_KM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spatialArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SpatialArgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SpatialOperation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IsWithin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
										&lt;span class=&quot;n&quot;&gt;shapeFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NEARBY_RADIUS_DEGREE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coordinatesStrategy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;makeQuery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spatialArgs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TopDocs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topDocs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexSearcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topDocs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;totalHits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexSearcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topDocs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scoreDocs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;numericValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;printStackTrace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to use it we need:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Create an index&lt;/strong&gt;. At this step you can choose where to store the index. For our use case, there is a &lt;a href=&quot;https://github.com/apache/lucene-solr/blob/master/lucene/core/src/java/org/apache/lucene/store/RAMDirectory.java&quot;&gt;RAMDirectory&lt;/a&gt;, which is essentially in-memory storage. This class is marked as deprecated, because it &lt;em&gt;uses inefficient synchronization&lt;/em&gt; according to the documentation. This might explain its poor performance. But we’ll come back to this later.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Index some documents&lt;/strong&gt;. To make our index support geospatial queries we need to have a field of type Shape, in particular &lt;a href=&quot;https://github.com/locationtech/spatial4j/blob/master/src/main/java/org/locationtech/spatial4j/shape/Point.java&quot;&gt;Point&lt;/a&gt; in our document.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Query the index&lt;/strong&gt;. Perform a spatial operation against the index.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Oh my gosh! That’s a good deal of classes to consider! That is definitely not the winner of the contest on “The most clear and easy to use API”. Though, as you would expect, Lucene indices are the most flexible:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Provides various shapes implementations: point, rectangle, and circle. You can also teach it to support polygons with some additional dependency.&lt;/li&gt;
  &lt;li&gt;You can put any data to the indexed document along with its geo point. It means you can store the whole entity there and perform other queries supported by Lucene, for example, fuzzy text matching.&lt;/li&gt;
  &lt;li&gt;Supports various spartial operations: &lt;em&gt;is within&lt;/em&gt;, &lt;em&gt;contains&lt;/em&gt;, &lt;em&gt;intersects&lt;/em&gt;, etc. Check &lt;a href=&quot;https://lucene.apache.org/core/7_4_0/spatial-extras/index.html&quot;&gt;SpatialOperation&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;It has distance and other spatial related math calculations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jeospatial&quot;&gt;Jeospatial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jchambers.github.io/jeospatial/&quot;&gt;Jeospatial&lt;/a&gt; is a geospatial library that provides &lt;em&gt;a set of 
tools for solving the k-nearest-neighbor problem on the earth’s surface&lt;/em&gt;. It is implemented using 
&lt;a href=&quot;https://en.wikipedia.org/wiki/Vantage-point_tree&quot;&gt;Vantage-point trees&lt;/a&gt;, and claims to have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(n log(n))&lt;/code&gt; 
time complexity for indexing operations and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;O(log(n))&lt;/code&gt;— for searching. A great visual explanation of how Vantage-point trees are constructed with examples can be found in this &lt;a href=&quot;https://fribbels.github.io/vptree/writeup&quot;&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/vp_tree.png&quot; alt=&quot;Figure 2. An illustration of a Vantage-point tree.&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Figure 2. An illustration of a Vantage-point tree.&lt;/figcaption&gt;

&lt;p&gt;The library is pretty easy and straightforward to use.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Create a custom class to hold an ID&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyGeospatialPoint&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleGeospatialPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nc&quot;&gt;MyGeospatialPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Init Vantage-point tree and elements to it&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;VPTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;SimpleGeospatialPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jeospatialPoints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VPTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;jeospatialPoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyGeospatialPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Get the neareset neighbor for a given point&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MyGeospatialPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jeospatialPoints&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNearestNeighbor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyGeospatialPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neighbor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is much more clear than the Lucene’s example: init a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VPTree&lt;/code&gt;, add points, perform a query. The simplicity doesn’t come without cost, of course - the library is somewhat limited in functionality and can be only to solve k-nearest-neighbor problem. Which is perfectly fine for me, because this is exactly what I needed.&lt;/p&gt;

&lt;p&gt;As VPTree can hold only objects of GeospatialPoint type, to attach additional data to objects stored in the index we need to create another class that extends its only implementation SimpleGeospatialPoint and holds required data. Pay attention that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getNearestNeighbor&lt;/code&gt; accepts as a second argument the distance in meters.&lt;/p&gt;

&lt;p&gt;More info can be found in the official &lt;a href=&quot;https://github.com/jchambers/jeospatial&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-java-spatial-index&quot;&gt;The Java Spatial Index&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aled/jsi&quot;&gt;The Java Spatial Index&lt;/a&gt; is a Java version of the R-tree spatial indexing 
algorithm as described in the 1984 paper “R-trees: A Dynamic Index Structure for Spatial Searching” by 
Antonin Guttman &lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/560px-R-tree.svg.png&quot; alt=&quot;Figure 3. An example of an R-tree for 2D rectangles. Image courtesy of Wikipedia.&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;figcaption&gt;Figure 3. An example of an R-tree for 2D rectangles. Image courtesy of Wikipedia.&lt;/figcaption&gt;

&lt;p&gt;The main element behind this data structure is a minimum bounding rectangle . The “R” in R-tree stands for 
rectangle. Each rectangle describes a single object, and nearby rectangles are then grouped in another 
rectangle on a higher level &lt;sup id=&quot;fnref:3&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. That’s a lot of rectangles in one sentence!&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/yo_dawg_rectangles.jpg&quot; alt=&quot;&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;Alright, enough jokes, let’s have a look at the code example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RTree&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rtree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RTree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rtree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Index some points&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Rectangle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
								   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;rtree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Perform a query&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;50.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;51.4&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ThreadLocalRandom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;11.2&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;D&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;latitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;longitude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distDegree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DistanceUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;dist2Degrees&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DistanceUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;EARTH_MEAN_RADIUS_KM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atomicId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AtomicInteger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;rtree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nearest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;atomicId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;distDegree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;atomicId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To be honest, the code was a bit confusing for me to write, because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Rectangles everywhere&lt;/strong&gt;. We need to index geo points, but the library supports only rectangles, so we have to create a “fake” rectangles with the same latitude and longitude for both corners.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Distance argument in “nearest”&lt;/strong&gt;. The distance argument to rtree.nearest is a spherical distance in degrees. Here we convert 100km to degrees using Lucene’s DistanceUtils class :) Or, you can just put 0.89932036.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Usage of AtomicInteger&lt;/strong&gt;. This is required, because rtree.nearest requires a lambda for each result. To use a variable inside a lambda it has to be effectively final, which does not allow us to change it, but we change an object’s state. Yeah, whatever.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can find more examples in the &lt;a href=&quot;https://github.com/aled/jsi-examples&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;benchmarks&quot;&gt;Benchmarks&lt;/h2&gt;

&lt;p&gt;I ran some benchmarks with all of above implementations. Worth noting, that I measure only querying performance, and not indexing. The reason is that my application should be optimized for read load, and it is totally fine if building indices takes some time. Of course, you can easily adjust the code to benchmark also the indexing phase.&lt;/p&gt;

&lt;p&gt;In preparation step, we create 3000 random geo points and store them in the index. During the benchmark itself, we perform a query against the index to find the nearest neighbour within 100 km. The full source code for benchmarks you can find in my &lt;a href=&quot;https://github.com/kalimatas/geospatial-benchmarks&quot;&gt;GitHub repository&lt;/a&gt;. Here are the results.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;java &lt;span class=&quot;nt&quot;&gt;-jar&lt;/span&gt; target/benchmarks.jar &lt;span class=&quot;nt&quot;&gt;-foe&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; csv &lt;span class=&quot;nt&quot;&gt;-rff&lt;/span&gt; benchmark.csv
...
Benchmark                     Mode  Cnt       Score        Error  Units
MyBenchmark.benchJeospatial  thrpt    3   99235,728 ± 132352,814  ops/s
MyBenchmark.benchJsi         thrpt    3  309795,462 ± 202296,631  ops/s
MyBenchmark.benchLucene      thrpt    3    1199,864 ±   1199,138  ops/s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And visual representation.&lt;/p&gt;

&lt;div class=&quot;img-wrapper&quot;&gt;
	&lt;figure&gt;
		
			&lt;img src=&quot;/static/img/posts/geospatial-benchmark-jmh.png&quot; alt=&quot;&quot; /&gt;
		
	&lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;To be honest, I was kind of surprised to find out, that Lucene  performed so badly. It could be because a) its RAMDirectory is just slow or b) I cannot cook it. My guess - some misconfiguration, though I could not figure out what was wrong. I asked a &lt;a href=&quot;https://stackoverflow.com/questions/52302394/poor-lucene-in-memory-spatial-index-performance&quot;&gt;question on StackOverflow&lt;/a&gt;, but so far no answers.&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Elasticsearch&quot;&gt;Elasticsearch on Wikipedia.&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?id=602266&quot;&gt;“R-trees: A Dynamic Index Structure for Spatial Searching” by Antonin Guttman.&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_bounding_rectangle&quot;&gt;Minimum bounding rectangle on Wikipedia.&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alexander Guz</name></author><summary type="html">One of my recent tasks included searching for objects within some radius based on their geo coordinates. For various reasons — not relevant to this topic — I wanted to make this work completely in memory. That’s why solutions like MySQL Spatial Data Types, PostGIS or Elasticsearch Geo Queries were not considered. The project is in Java. I started to look for possible options, and, though, I found a few, they all lacked an easy to follow documentation (if at all) and examples.</summary></entry><entry><title type="html">Enabling Trace Logging for Elasticsearch REST Client with Logback</title><link href="https://guzalexander.com/2018/09/30/es-rest-client-trace-logging.html" rel="alternate" type="text/html" title="Enabling Trace Logging for Elasticsearch REST Client with Logback" /><published>2018-09-30T15:12:00+02:00</published><updated>2018-09-30T15:12:00+02:00</updated><id>https://guzalexander.com/2018/09/30/es-rest-client-trace-logging</id><content type="html" xml:base="https://guzalexander.com/2018/09/30/es-rest-client-trace-logging.html">&lt;p&gt;Recently I had some issues with Elasticsearch - all requests were failing with “bad request” error. In order to understand what was wrong with these requests, I, natually, decided to enable debug/trace logging of for ES REST Client, but couldn’t find out how. Partially, because the &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/client/java-rest/6.3/java-rest-low-usage-logging.html&quot;&gt;official documentation&lt;/a&gt; on this topic could have been more informative, to be honest. But mainly, because my project uses &lt;a href=&quot;https://logback.qos.ch/&quot;&gt;Logback&lt;/a&gt; and the REST Client package uses &lt;a href=&quot;https://commons.apache.org/proper/commons-logging/&quot;&gt;Apache Commons Logging&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This article is a short summary of how I’ve eventually managed to enable tracing with Logback. The patient under inspection is  Elasticsearch 6.3 with its &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/client/java-rest/6.3/java-rest-low.html&quot;&gt;Java Low Level REST Client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;According to the official documentation, we need to enable trace logging for the &lt;code&gt;tracer&lt;/code&gt; package. If you are interested, you can check the source code for &lt;a href=&quot;https://github.com/elastic/elasticsearch/blob/v6.3/client/rest/src/main/java/org/elasticsearch/client/RequestLogger.java#L49&quot;&gt;org.elasticsearch.client.RequestLogger&lt;/a&gt; class, where the logger with this name is defined:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.commons.logging.Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.commons.logging.LogFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Log&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tracer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LogFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tracer&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see, enabling this logger with &lt;code&gt;TRACE&lt;/code&gt; level in Logback is not enough, because, again, the client uses Apache Commons Logging.&lt;/p&gt;

&lt;p&gt;Luckily, Logback was designed with this use case in mind, and provides a set of bridging modules &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. They 
allow us to use Logback even with other dependencies that rely on other logging API. In particular, we’re looking for &lt;a href=&quot;https://www.slf4j.org/legacy.html#jclOverSLF4J&quot;&gt;jcl-over-slf4j.jar&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, here are the steps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Require &lt;code&gt;jcl-over-slf4j.jar&lt;/code&gt;&lt;/strong&gt;. The dependencies section for Gradle:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gradle&quot; data-lang=&quot;gradle&quot;&gt;&lt;span class=&quot;k&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'org.slf4j:slf4j-api:1.8.0-beta2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ch.qos.logback:logback-classic:1.3.0-alpha4'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'org.slf4j:jcl-over-slf4j:1.8.0-beta2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Exclude &lt;code&gt;commons-logging.jar&lt;/code&gt;&lt;/strong&gt;. The details of why are described in the Logback docs &lt;a href=&quot;https://www.slf4j.org/legacy.html#jclOverSLF4J&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-gradle&quot; data-lang=&quot;gradle&quot;&gt;&lt;span class=&quot;k&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;configurations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;group:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commons-logging&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;module:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commons-logging&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Enable &lt;em&gt;tracer&lt;/em&gt; logger in Logback configuration.&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ch.qos.logback.core.ConsoleAppender&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;encoder&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;pattern&amp;gt;&lt;/span&gt;[%d{ISO8601}] [%thread] %-5level %logger{36} - %msg%n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/pattern&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/encoder&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/appender&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;root&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WARN&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/root&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;logger&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tracer&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;TRACE&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;additivity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/logger&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Additionally, you can also enable debug logging ofr RestClient class itself --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;logger&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.elasticsearch.client.RestClient&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;level=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DEBUG&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;additivity=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;appender-ref&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;STDOUT&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/logger&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Voilà! Enjoy your debugging session!&lt;/p&gt;

&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.slf4j.org/legacy.html&quot;&gt;Bridging legacy APIs with Logback&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alexander Guz</name></author><summary type="html">Recently I had some issues with Elasticsearch - all requests were failing with “bad request” error. In order to understand what was wrong with these requests, I, natually, decided to enable debug/trace logging of for ES REST Client, but couldn’t find out how. Partially, because the official documentation on this topic could have been more informative, to be honest. But mainly, because my project uses Logback and the REST Client package uses Apache Commons Logging.</summary></entry></feed>